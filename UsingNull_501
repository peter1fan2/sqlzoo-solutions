# Selecting NULL values.
SELECT code, name FROM party
  WHERE leader IS NULL
  
#1.List the teachers who have NULL for their department.
SELECT name FROM teacher
  WHERE dept IS NULL
  
#2. Note the INNER JOIN misses the teachers with no department and the departments with no teacher.
SELECT teacher.name, dept.name
FROM teacher INNER JOIN dept
          ON (teacher.dept=dept.id)
           
#3. Use a different JOIN so that all teachers are listed.
SELECT teacher.name, dept.name
FROM teacher LEFT JOIN dept
ON (teacher.dept=dept.id)

#4. Use a different JOIN so that all departments are listed.
SELECT teacher.name, dept.name
FROM teacher RIGHT JOIN dept
ON (teacher.dept=dept.id)

#Inserted: COALESCE
COALESCE takes any number of arguments and returns the first value that is not null.

  COALESCE(x,y,z) = x if x is not NULL
  COALESCE(x,y,z) = y if x is NULL and y is not NULL
  COALESCE(x,y,z) = z if x and y are NULL but z is not NULL
  COALESCE(x,y,z) = NULL if x and y and z are all NULL
  
1) COALESCE can be useful when you want to replace a NULL value with some other value. In this example you show the name of the party for each MSP that has a party. For the MSP with no party (such as Canavan, Dennis) you show the string None.
SELECT name, party
      ,COALESCE(party,'None') AS aff
  FROM msp WHERE name LIKE 'C%'
  
Result:
name	party	aff
Campbell MSP, Colin	SNP	SNP
Canavan MSP, Dennis		None
Chisholm MSP, Malcolm	Lab	Lab
Craigie MSP, Cathie	Lab	Lab
Crawford JP MSP, Bruce	SNP	SNP
Cunningham MSP, Roseanna	SNP	SNP
Curran MSP, Ms Margaret	Lab	Lab

#5. Use COALESCE to print the mobile number. Use the number '07986 444 2266' if there is no number given. Show teacher name and mobile number or '07986 444 2266'
SELECT name, 
COALESCE(mobile,'07986 444 2266') As mobile_number FROM teacher

#6. Use the COALESCE function and a LEFT JOIN to print the teacher name and department name. Use the string 'None' where there is no department.
SELECT teacher.name, 
COALESCE(dept.name, 'None') AS deptname
FROM teacher LEFT JOIN dept
ON (teacher.dept=dept.id)

#7. Use COUNT to show the number of teachers and the number of mobile phones.
SELECT COUNT(name), COUNT(mobile) FROM teacher
GROUP BY name, mobile
#error: Wrong answer. Too many rows

  
