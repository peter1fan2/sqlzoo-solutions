#1. List the films where the yr is 1962 [Show id, title]
SELECT id, title
 FROM movie
 WHERE yr=1962
 
#2. When was Citizen Kane released?
SELECT yr
 FROM movie
 WHERE title='Citizen Kane'
 
#3. List all of the Star Trek movies, include the id, title and yr (all of these movies include the words Star Trek in the title). Order results by year.
SELECT id, title, yr
 FROM movie
 WHERE title LIKE '%Star Trek%'
 
#4. id for actor Glenn Close
SELECT id
 FROM actor 
 WHERE name = 'Glenn Close'  
 
#5. What is the id of the film 'Casablanca'
SELECT id
 FROM movie 
 WHERE title = 'Casablanca'
 
#6. Obtain the cast list for 'Casablanca'.
SELECT name	
 FROM actor JOIN casting ON actor.id=casting.actorid
 WHERE movieid=11768
 
--OR WORKING ON THE DIFFERENT DIRECTIONS
 SELECT name FROM actor
JOIN casting ON actor.id=actorid
JOIN movie ON movie.id = movieid
WHERE title = 'Casablanca'

#7.Obtain the cast list for the film 'Alien'.
SELECT name	
FROM actor 
LEFT JOIN casting ON actor.id=casting.actorid
LEFT JOIN movie ON movie.id=actor.id
WHERE movie.title = 'Alien' # Wrong answer. Too few rows

# the right join and the right keywords
SELECT name	
FROM actor 
RIGHT JOIN casting ON actor.id=casting.actorid
RIGHT JOIN movie ON movie.id=casting.movieid
WHERE movie.title = 'Alien'

--or even make it more easier

SELECT name FROM actor
JOIN casting ON actor.id=actorid
JOIN movie ON movie.id = movieid
WHERE title = 'Alien'

#8. List the films in which 'Harrison Ford' has appeared
SELECT title 
FROM movie
RIGHT JOIN casting ON movie.id=casting.movieid
RIGHT JOIN actor ON actor.id=casting.actorid
WHERE actor.name='Harrison Ford'


--JOIN results rejoin!!!
SELECT title FROM movie
JOIN casting on movie.id=movieid
JOIN actor ON actor.id=actorid
WHERE name = 'Harrison Ford'

#9. List the films where 'Harrison Ford' has appeared - but not in the starring role. 
SELECT title 
FROM movie
RIGHT JOIN casting ON movie.id=casting.movieid
RIGHT JOIN actor ON actor.id=casting.actorid
WHERE actor.name='Harrison Ford' AND ord!=1

--easier JOIN

SELECT title FROM movie
JOIN casting on movie.id=movieid
JOIN actor ON actor.id=actorid
WHERE name = 'Harrison Ford' AND ord !=1

#10. List the films together with the leading star for all 1962 films.
SELECT movie.title, actor.name
FROM movie, actor, casting
WHERE movie.id=casting.movieid AND actor.id=casting.actorid
AND movie.yr=1962 AND ord=1

-- anothr JOIN WAY
SELECT title, name FROM movie
JOIN casting ON movieid=movie.id
JOIN actor on actorid=actor.id
WHERE yr=1962 AND ord=1

#11. Which were the busiest years for 'John Travolta', show the year and the number of movies he made each year for any year in which he made more than 2 movies.
SELECT yr,COUNT(title) FROM
  movie JOIN casting ON movie.id=movieid
         JOIN actor   ON actorid=actor.id
where name='John Travolta'
GROUP BY yr
HAVING COUNT(title)=(SELECT MAX(c) FROM
(SELECT yr,COUNT(title) AS c FROM
   movie JOIN casting ON movie.id=movieid
         JOIN actor   ON actorid=actor.id
 where name='John Travolta'
 GROUP BY yr) AS t
)

--easy ones!!!!
SELECT yr, COUNT(movieid) FROM movie
JOIN casting ON movie.id=movieid
JOIN actor ON actor.id=actorid
WHERE name = 'John Travolta'
GROUP BY yr
HAVING COUNT(movieid)>2

#12.List the film title and the leading actor for all of the films 'Julie Andrews' played in.
SELECT title, name FROM
  movie JOIN casting ON movie.id=movieid
         JOIN actor   ON actorid=actor.id
where name='Julie Andrews'
% wrong number, all the film title with 'Julie Andrews'
% Now I need to find out the leading actor
SELECT movie.title, actor.name FROM
  movie JOIN casting ON movie.id=movieid
         JOIN actor   ON actorid=actor.id
where title IN (
SELECT title FROM
  movie JOIN casting ON movie.id=movieid
         JOIN actor   ON actorid=actor.id
WHERE name='Julie Andrews')
AND ord = 1 
% there are two "little Miss Marker", therefore, I should clearify by selecting the id rather than the 'title' to remove the remake version.
SELECT title, name
  FROM movie, casting, actor
  WHERE movieid=movie.id
    AND actorid=actor.id
    AND ord=1
    AND movieid IN
    (SELECT movieid FROM casting, actor
     WHERE actorid=actor.id
     AND name='Julie Andrews')
     
--Another way of doing it
SELECT title, name FROM movie
JOIN casting ON movie.id=movieid
JOIN actor ON actor.id=actorid
WHERE movie.id IN (
SELECT movie.id FROM movie
JOIN casting ON movie.id=movieid
JOIN actor ON actor.id=actorid
WHERE name='Julie Andrews'
) AND ord=1
     
#13. Obtain a list, in alphabetical order, of actors who've had at least 30 starring roles.
SELECT name FROM movie, casting, actor
WHERE movieid=movie.id
AND actorid=actor.id
AND name IN 
(SELECT name FROM casting, actor
     WHERE actorid=actor.id 
     AND ord=1 
     AND COUNT(title)>=30 
     GROUP BY name)
#Error: Invalid use of group function
#It should be count the ord >=30, not titles!!!
SELECT name
FROM actor
  JOIN casting ON (id = actorid AND (SELECT COUNT(ord) FROM casting WHERE actorid = actor.id AND ord=1)>=30)
GROUP BY name

--EASY TO UNDERSTAND ANSWER!!! >=30 at least 30!!!
SELECT name FROM actor
WHERE id IN (
SELECT actorid
FROM casting
WHERE ord=1
GROUP BY actorid
HAVING COUNT(ord)>=30
)


#14. List the films released in the year 1978 ordered by the number of actors in the cast, then by title.
SELECT title
  FROM movie, casting, actor
  WHERE movieid=movie.id
    AND actorid=actor.id
AND yr = 1978
ORDER BY SUM(movieid)
GROUP BY movieid
#Error You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near 'GROUP BY movieid' at line 7
Don'y forget that if you are mixing grouped (ie. SUM) fields and non-grouped fields, you need to GROUP BY one of the non-grouped fields.
SELECT title, COUNT(movieid) AS actor_numbers
  FROM movie, casting
  WHERE id=movieid
AND yr=1978
GROUP BY title
ORDER BY actor_numbers DESC, title
--Or you can do it this way!!!

SELECT title, COUNT(actorid) AS cast_number FROM movie
JOIN casting ON movieid=movie.id
WHERE yr=1978 
GROUP BY title
ORDER BY cast_number DESC, title

#15. List all the people who have worked with 'Art Garfunkel'.
SELECT name FROM movie, casting, actor
WHERE movieid=movie.id
AND actorid=actor.id
AND name != 'Art Garfunkel'
AND movieid IN (
SELECT movieid FROM movie, casting, actor
WHERE movieid=movie.id
AND actorid=actor.id
AND name = 'Art Garfunkel' )

-- Or you can select this way
SELECT name FROM actor
JOIN casting ON actor.id=actorid
WHERE movieid IN (
SELECT movieid FROM casting
JOIN actor ON actorid=actor.id
WHERE name = 'Art Garfunkel'
) AND name !='Art Garfunkel'

1. Select the statement which lists the unfortunate directors of the movies which have caused financial loses (gross < budget)
SELECT name
  FROM actor INNER JOIN movie ON actor.id = director
 WHERE gross < budget
 
2. Select the correct example of JOINing three tables
SELECT *
  FROM actor JOIN casting ON actor.id = actorid
  JOIN movie ON movie.id = movieid
  
3. Select the statement that shows the list of actors called 'John' by order of number of movies in which they acted
SELECT name, COUNT(movieid)
  FROM casting JOIN actor ON actorid=actor.id
 WHERE name LIKE 'John %'
 GROUP BY name ORDER BY 2 DESC
 
4. Select the result that would be obtained from the following code:
 SELECT title 
   FROM movie JOIN casting ON (movieid=movie.id)
              JOIN actor   ON (actorid=actor.id)
  WHERE name='Paul Hogan' AND ord = 1
  
"Crocodile" Dundee
Crocodile Dundee in Los Angeles
Flipper
Lightning Jack

5. Select the statement that lists all the actors that starred in movies directed by Ridley Scott who has id 351
SELECT name
  FROM movie JOIN casting ON movie.id = movieid
  JOIN actor ON actor.id = actorid
WHERE ord = 1 AND director = 351


6. There are two sensible ways to connect movie and actor. They are:
link the director column in movies with the primary key in actor
connect the primary keys of movie and actor via the casting table

7. Select the result that would be obtained from the following code:
 SELECT title, yr 
   FROM movie, casting, actor 
  WHERE name='Robert De Niro' AND movieid=movie.id AND actorid=actor.id AND ord = 3
  
A Bronx Tale	1993
Bang the Drum Slowly	1973
Limitless	2011

