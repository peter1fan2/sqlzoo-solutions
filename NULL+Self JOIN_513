https://sqlzoo.net/wiki/Using_Null
6.Use the COALESCE function and a LEFT JOIN to print the teacher name and department name. Use the string 'None' where there is no department.

SELECT teacher.name, COALESCE(dept.name, 'None') FROM teacher
LEFT JOIN dept ON teacher.dept = dept.id

8. Use COUNT and GROUP BY dept.name to show each department and the number of staff. Use a RIGHT JOIN to ensure that the Engineering department is listed.
--Difference between LEFT JOIN & RIGHT JOIN!!!
SELECT DISTINCT dept.name, COUNT(teacher.name) FROM teacher
RIGHT JOIN dept ON dept.id=teacher.dept
GROUP BY dept.name

name	COUNT(teacher..
Computing	3
Design	1
Engineering	0

-----------------------

SELECT DISTINCT dept.name, COUNT(teacher.name) FROM teacher
LEFT JOIN dept ON dept.id=teacher.dept
GROUP BY dept.name

name	COUNT(teacher..
          2
Computing	3
Design	1

9.Use CASE to show the name of each teacher followed by 'Sci' if the teacher is in dept 1 or 2 and 'Art' otherwise.

  CASE WHEN condition1 THEN value1 
       WHEN condition2 THEN value2  
       ELSE def_value 
  END 
------------------------CASE
SELECT teacher.name, (
CASE
    WHEN teacher.dept = 1 THEN 'Sci'
    WHEN teacher.dept = 2 THEN 'Sci'
    ELSE 'Art'
END
) FROM teacher

10. Use CASE to show the name of each teacher followed by 'Sci' if the teacher is in dept 1 or 2, show 'Art' if the teacher's dept is 3 and 'None' otherwise.

SELECT teacher.name, (
CASE
    WHEN teacher.dept IN (1,2) THEN 'Sci'
    WHEN teacher.dept = 3 THEN 'Art'
    ELSE 'None'
END
) FROM teacher

--------------------------------SELF JOIN https://sqlzoo.net/wiki/Self_join
1. How many stops are in the database.

SELECT COUNT(DISTINCT id) FROM stops

3. Give the id and the name for the stops on the '4' 'LRT' service.

SELECT id, name FROM stops
JOIN route ON stop=id
WHERE num = '4' AND company = 'LRT'

4. The query shown gives the number of routes that visit either London Road (149) or Craiglockhart (53). Run the query and notice the two services that link these stops have a count of 2. Add a HAVING clause to restrict the output to these two routes.

SELECT company, num, COUNT(*)
FROM route WHERE stop=149 OR stop=53
GROUP BY company, num
HAVING COUNT(*) = 2

5. Execute the self join shown and observe that b.stop gives all the places you can get to from Craiglockhart, without changing routes. Change the query so that it shows the services from Craiglockhart to London Road.

SELECT a.company, a.num, a.stop, b.stop
FROM route a JOIN route b ON
  (a.company=b.company AND a.num=b.num)
WHERE a.stop=53

SELECT a.company, a.num, a.stop, b.stop
FROM route a JOIN route b ON
  (a.company=b.company AND a.num=b.num)
WHERE a.stop=53 AND b.stop=149

6. The query shown is similar to the previous one, however by joining two copies of the stops table we can refer to stops by name rather than by number. Change the query so that the services between 'Craiglockhart' and 'London Road' are shown. If you are tired of these places try 'Fairmilehead' against 'Tollcross'

SELF JOIN-------------------2 STOPS, 2ROUTES!!!!!------------------------

SELECT a.company, a.num, stopa.name, stopb.name
FROM route a JOIN route b ON
  (a.company=b.company AND a.num=b.num)
  JOIN stops stopa ON (a.stop=stopa.id)
  JOIN stops stopb ON (b.stop=stopb.id)
WHERE stopa.name='Craiglockhart' AND stopb.name='London Road'

7. Give a list of all the services which connect stops 115 and 137 ('Haymarket' and 'Leith')
-----------------SELF JOIN ----------------------------
SELECT DISTINCT a.company, a.num
FROM route a JOIN route b
ON (a.company=b.company AND a.num=b.num)
    JOIN stops stopa ON (a.stop=stopa.id)
    JOIN stops stopb ON (b.stop=stopb.id)
WHERE stopa.name = 'Haymarket' AND stopb.name='Leith'

8.Give a list of the services which connect the stops 'Craiglockhart' and 'Tollcross'

SELECT a.company, a.num
FROM route a JOIN route b ON (a.company=b.company AND a.num=b.num)
    JOIN stops s1 ON (a.stop=s1.id)
    JOIN stops s2 ON (b.stop=s2.id)
WHERE s1.name='Craiglockhart' AND s2.name= 'Tollcross'

9. Give a distinct list of the stops which may be reached from 'Craiglockhart' by taking one bus, including 'Craiglockhart' itself, offered by the LRT company. Include the company and bus no. of the relevant services.
----------------------------------------
SELECT DISTINCT s2.name, a.company, a.num
FROM route a JOIN route b ON (a.company=b.company AND a.num=b.num)
 JOIN stops s1 ON (a.stop=s1.id)
 JOIN stops s2 ON (b.stop=s2.id)
WHERE s1.name='Craiglockhart' AND a.company='LRT'


10.Find the routes involving two buses that can go from Craiglockhart to Lochend.
Show the bus no. and company for the first bus, the name of the stop for the transfer,
and the bus no. and company for the second bus.

-----------------------------------------------------------
SELECT a1.num, a1.company, s2.name, b1.num, b1.company
FROM route a1 JOIN route a2 ON 
(a1.num=a2.num AND a1.company=a2.company)
JOIN route b1 ON (a2.stop=b1.stop) 
JOIN route b2 ON (b1.num=b2.num AND b1.company=b2.company)
 JOIN stops s1 ON (a1.stop=s1.id)
 JOIN stops s2 ON (a2.stop=s2.id)
 JOIN stops s3 ON (b1.stop=s3.id)
 JOIN stops s4 ON (b2.stop=s4.id)
WHERE s1.name='Craiglockhart' AND s4.name='Lochend'

